[tool.poetry]
name = "{{ cookiecutter.package_name }}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
authors = ["{{ cookiecutter.full_name }} <{{ cookiecutter.email }}>"]
readme = "README.md"

[tool.poetry.urls]
Changelog = "https://github.com/NinetyOne-GitHub/f4-analyst-views/releases"

[tool.poetry.scripts]
example = "{{ cookiecutter.package_name }}.workloads.example:entrypoint"

[tool.poetry.dependencies]
python = ">=3.9.0,<3.13.0"
pyspark = "^3.5.0"
pyarrow = "^15.0.0"
delta-spark = "^3.1.0"
pyyaml = "^6.0.1"
pendulum = "^3.0.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.1"
pytest-cov = "^4.1.0"
ruff = "^0.2.2"
pip-system-certs = "^4.0"

[tool.ruff]
line-length = 100
lint.ignore = [
    "E501",  # line too long, handled by black
    "E731",  # lambda assignment
]
lint.select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
]

[tool.ruff.lint.isort]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
known-first-party = ["{{ cookiecutter.package_name }}"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["{{ cookiecutter.package_name }}", "tests"]

[tool.coverage.report]
fail_under = 80

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
